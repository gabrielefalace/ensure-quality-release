# Load secrets from Key Vault

#variables:
#  - group: e2e-gov-demo-kv


trigger: 
- main

variables:
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  projectRoot: $(System.DefaultWorkingDirectory)

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    
    steps:
    
    - task: AzureKeyVault@2
      inputs:
        azureSubscription: 'Azure subscription 1(efa42e01-27ef-4660-b3e7-2f62a24bd429)'
        KeyVaultName: 'falace-kv'
        SecretsFilter: '*'
        RunAsPreJob: true
    
    - bash: |
        az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID
      displayName: Azure Login
      env:
        ARM_SUBSCRIPTION_ID: $(subscription-id)
        ARM_CLIENT_ID:       $(client-id)
        ARM_CLIENT_SECRET:   $(client-secret)
        ARM_TENANT_ID:       $(tenant-id)
        ARM_ACCESS_KEY:      $(access-key)
        TF_RESOURCE_GROUP: $(resource-group)
        TF_ACCOUNT_NAME:   $(account-name)
        TF_CONTAINER_NAME: $(container-name)
        TF_KEY:           $(key)

    - bash: |
        cd terraform && terraform init \
          -backend-config="resource_group_name=$TF_RESOURCE_GROUP" \
          -backend-config="storage_account_name=$TF_ACCOUNT_NAME" \
          -backend-config="container_name=$TF_CONTAINER_NAME" \
          -backend-config="key=$TF_KEY" \
          -backend-config="access_key=$ARM_ACCESS_KEY" \
          -backend-config=subscription_id="$(ARM_SUBSCRIPTION_ID)" \
          -backend-config=tenant_id="$(ARM_TENANT_ID)" \
          -backend-config=client_id="$(ARM_CLIENT_ID)" \
          -backend-config=client_secret="$(ARM_CLIENT_SECRET)" 
      displayName: Terraform Init
      env:
        ARM_SUBSCRIPTION_ID: $(subscription-id)
        ARM_CLIENT_ID:       $(client-id)
        ARM_CLIENT_SECRET:   $(client-secret)
        ARM_TENANT_ID:       $(tenant-id)
        ARM_ACCESS_KEY:      $(access-key)
        TF_RESOURCE_GROUP: $(resource-group)
        TF_ACCOUNT_NAME:   $(account-name)
        TF_CONTAINER_NAME: $(container-name)
        TF_KEY:           $(key)
    
    - bash: |
        export ARM_SUBSCRIPTION_ID=$(subscription-id) &&\
        export ARM_CLIENT_ID=$(client-id) &&\
        export ARM_CLIENT_SECRET=$(client-secret) &&\
        export ARM_TENANT_ID=$(tenant-id) &&\
        export ARM_ACCESS_KEY=$(access-key) &&\
        export TF_RESOURCE_GROUP=$(resource-group) &&\
        export TF_ACCOUNT_NAME=$(account-name) &&\
        export TF_CONTAINER_NAME=$(container-name) &&\
        export TF_KEY=$(key) 
      displayName: Set ENV vars

    - bash: |
        printenv
      displayName: Print Env

    - bash: |
        cd terraform && terraform apply -auto-approve
      displayName: Terraform apply
      env:
        ARM_SUBSCRIPTION_ID: $(subscription-id)
        ARM_CLIENT_ID:       $(client-id)
        ARM_CLIENT_SECRET:   $(client-secret)
        ARM_TENANT_ID:       $(tenant-id)
        ARM_ACCESS_KEY:      $(access-key)
        TF_RESOURCE_GROUP: $(resource-group)
        TF_ACCOUNT_NAME:   $(account-name)
        TF_CONTAINER_NAME: $(container-name)
        TF_KEY:           $(key)